syntax = "proto3";
package ebi.rpc;

message RequestMetadata {
  bytes request_uuid = 2;
  uint64 source_id = 1;
  bool relayed = 3;
}

message ResponseMetadata {
  bytes request_uuid = 1;
  uint32 return_code = 2;
  optional ErrorData error_data = 3;
}

message ErrorData {
  repeated string error_data = 1;
}

//[#] Query Protocol 

message ClientQuery { //[ ] 
  string query = 1;
  FileOrd file_ord = 2;
  bytes workspace_id = 4;
  bool atomic = 5;
  RequestMetadata metadata = 6;
}

message PeerQuery { //[ ] 
  bytes query = 1;
  bytes workspace_id = 3;
  RequestMetadata metadata = 4;
}

message PeerQueryResponse { //[ ] 
  uint64 token = 1;
  uint32 return_code = 2;
  bytes files = 3;
  ResponseMetadata metadata = 4;
}

message ClientQueryResponse { //[ ] 
  uint64 token = 1;
  uint32 packets = 2;
  ResponseMetadata metadata = 3;
}

message ClientQueryData { //[ ] 
  uint64 token = 1;
  uint32 return_code = 2;
  repeated File files = 3;
}


//[#] Workspace Operations 

message CreateWorkspace { //[x] 
  string name = 1;
  string description = 2;
  RequestMetadata metadata = 3;
} //[x] Notify 

message EditWorkspace { //[x] 
  bytes workspace_id = 1;
  string name = 2;
  string description = 3;
  RequestMetadata metadata = 4;
} //[x] Notify 

message EditWorkspaceResponse { //[x] 
  ResponseMetadata metadata = 1;
}

message CreateWorkspaceResponse { //[x] 
  bytes workspace_id = 1;
  ResponseMetadata metadata = 2;
}

message DeleteWorkspace { //[x] 
  bytes workspace_id = 1;
  RequestMetadata metadata = 4;
} //[x] Notify 

message DeleteWorkspaceResponse { //[x] 
  ResponseMetadata metadata = 1;
}

message GetWorkspaces { //[x] 
  RequestMetadata metadata = 1;
}

message GetWorkspacesResponse { //[x] 
  repeated Workspace workspaces = 1;
  ResponseMetadata metadata = 2;
}

message Workspace {
  bytes workspace_id = 1;
  string name = 2;
  string description = 3;
  repeated Tag tags = 4;
}

//[#] Shelf Operations 

message AddShelf { //[x] 
  bytes peer_id = 1;
  string path = 2; 
  optional string name = 3;
  optional string description = 4;
  bytes workspace_id = 5;
  RequestMetadata metadata = 6;
} //[x] Notify 

message EditShelf { //[x] 
  bytes shelf_id = 1;
  bytes workspace_id = 2;
  string name = 3;
  string description = 4;
  RequestMetadata metadata = 6;
} //[x] Notify 

message EditShelfResponse { //[x] 
  ResponseMetadata metadata = 1;
}

message AddShelfResponse { //[x] 
  optional bytes shelf_id = 1;
  ResponseMetadata metadata = 2;
}

message GetShelves { //[x] 
  bytes workspace_id = 1;
  RequestMetadata metadata = 2;
}

message GetShelvesResponse { //[x] 
  repeated Shelf shelves = 1;
  ResponseMetadata metadata = 2;
}

message RemoveShelf { //[x] 
  bytes shelf_id = 1;
  bytes workspace_id = 2;
  RequestMetadata metadata = 3;
} //[x] Notify 

message RemoveShelfResponse { //[x] 
  ResponseMetadata metadata = 1;
}

message Shelf {
  bytes shelf_id = 1;
  oneof owner {
    bytes node_id = 2;
    bytes sync_id = 3;
  }
  string name = 4;
  string description = 5;
  string path = 6;
}

//[#] Tag Operations 

message CreateTag { //[x] 
  bytes workspace_id = 1;
  string name = 2;
  uint64 priority = 3;
  optional bytes parent_id = 4;
  RequestMetadata metadata = 5;
} //[x] Notify 

message CreateTagResponse { //[x] 
  optional bytes tag_id = 1;
  ResponseMetadata metadata = 2;
}

message EditTag { //[x] 
  bytes tag_id = 1;
  bytes workspace_id = 2;
  string name = 3;
  uint64 priority = 4;
  optional bytes parent_id = 5;
  RequestMetadata metadata = 6;
} //[x] Notify 

message EditTagResponse { //[x] 
  ResponseMetadata metadata = 1;
}

message AttachTag { //[x] 
  bytes workspace_id = 1;
  bytes shelf_id = 2;
  bytes tag_id = 3;
  string path = 4; 
  RequestMetadata metadata = 5;
} //[x] Notify 

message AttachTagResponse { //[x] 
  ResponseMetadata metadata = 1;
}

message DetachTag { //[x] 
  bytes workspace_id = 1;
  bytes shelf_id = 2;
  bytes tag_id = 3;
  string path = 4;
  RequestMetadata metadata = 5;
} //[x] Notify 

message StripTag { //[x] 
  bytes workspace_id = 1;
  bytes shelf_id = 2;
  bytes tag_id = 3;
  string path = 4;
  RequestMetadata metadata = 5;
} //[x] Notify 

message DetachTagResponse { //[x] 
  ResponseMetadata metadata = 1;
}

message StripTagResponse { //[x] 
  ResponseMetadata metadata = 1;
}

message DeleteTag { //[x] 
  bytes workspace_id = 1;
  bytes tag_id = 2;
  RequestMetadata metadata = 3;
} //[x] Notify 

message DeleteTagResponse { //[x] 
  ResponseMetadata metadata = 1;
}

message Tag {
  bytes tag_id = 1;
  string name = 2;
  uint64 priority = 3;
  optional bytes parent_id = 4;
}

//[#] File Structures 

message FileOrd {
  OrderBy order_by = 1;
  bool ascending = 2;
}

enum OrderBy {
  NAME = 0;
  SIZE = 1;
  MODIFIED = 2;
  ACCESSED = 3;
  CREATED = 4;
  UNORDERED = 5;
}

message FileMetadata {
  uint64 size = 1;
  bool readonly = 2;
  uint64 modified = 3;
  uint64 accessed = 4;
  uint64 created = 5;
  UnixMetadata unix = 6;
  WindowsMetadata windows = 7;
}

message UnixMetadata {
  uint32 permissions = 1;
  uint32 uid = 2;
  uint32 gid = 3;
}

message WindowsMetadata {
  uint32 attributes = 1;
}

message File {
  string path = 1;
  FileMetadata metadata = 2;
}

//[#] Notification Protocol 

message Heartbeat {}

message Operation {
  ActionTarget target = 1;
  bytes id = 2;
  ActionType action = 3;
}

enum ActionTarget {
  WORKSPACE = 0;
  SHELF = 1;
  TAG = 2;
}

enum ActionType {
  CREATE = 0;
  EDIT = 1;
  DELETE = 2;
}

message PeerConnected {
  bytes peer_id = 1;
  string name = 2;
}
